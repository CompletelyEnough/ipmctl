[33mcommit 906305941dfcb69aca63c6ace363afac29cd4b52[m[33m ([m[1;36mHEAD -> [m[1;32mtesting[m[33m, [m[1;33mtag: v01.00.00.3402[m[33m)[m
Author: Maciej Plucinski <maciej.plucinski@intel.com>
Date:   Tue Jan 15 02:18:33 2019 +0100

    no recovery flow for partial update in the OS
    
    Signed-off-by: Maciej Plucinski <maciej.plucinski@intel.com>

[1mdiff --git a/DcpmPkg/driver/Core/Namespace.c b/DcpmPkg/driver/Core/Namespace.c[m
[1mindex a6e4d8a..e0087ed 100644[m
[1m--- a/DcpmPkg/driver/Core/Namespace.c[m
[1m+++ b/DcpmPkg/driver/Core/Namespace.c[m
[36m@@ -1315,10 +1315,12 @@[m [mReadLabelStorageArea([m
     // At first read the Index size only form the beginning of the LSA[m
     IndexSize = sizeof((*ppLsa)->Index);[m
     ReturnCode = FwGetPCDFromOffsetSmallPayload(pDimm, PCD_LSA_PARTITION_ID, Offset, IndexSize, &pRawData);[m
[31m-    // Read the IndexSize again plus 2 times siez of the Free Mask starting at the end of the previoues read[m
[31m-    Offset = IndexSize;[m
[31m-    IndexSize += 2 * LABELS_TO_FREE_BYTES(ROUNDUP(((LABEL_STORAGE_AREA *)pRawData)->Index[0].NumberOfLabels, NSINDEX_FREE_ALIGN));[m
[31m-    ReturnCode = FwGetPCDFromOffsetSmallPayload(pDimm, PCD_LSA_PARTITION_ID, Offset, IndexSize, &pRawData);[m
[32m+[m[32m    if (EFI_SUCCESS == ReturnCode) {[m
[32m+[m[32m      // Read the IndexSize again plus 2 times siez of the Free Mask starting at the end of the previoues read[m
[32m+[m[32m      Offset = IndexSize;[m
[32m+[m[32m      IndexSize += 2 * LABELS_TO_FREE_BYTES(ROUNDUP(((LABEL_STORAGE_AREA *)pRawData)->Index[0].NumberOfLabels, NSINDEX_FREE_ALIGN));[m
[32m+[m[32m      ReturnCode = FwGetPCDFromOffsetSmallPayload(pDimm, PCD_LSA_PARTITION_ID, Offset, IndexSize, &pRawData);[m
[32m+[m[32m    }[m
   }[m
   else {[m
     ReturnCode = FwCmdGetPlatformConfigData(pDimm, PCD_LSA_PARTITION_ID, &pRawData);[m
[36m@@ -1907,7 +1909,7 @@[m [mCompareDpaInRange([m
     return 0;[m
   }[m
 }[m
[31m-[m
[32m+[m[32m#ifndef OS_BUILD[m
 /**[m
   Recover a partially updated namespace label set[m
   Clear the updating bit and use the name from label in pos 0[m
[36m@@ -2036,7 +2038,7 @@[m [mFinish:[m
   NVDIMM_EXIT_I64(ReturnCode);[m
   return ReturnCode;[m
 }[m
[31m-[m
[32m+[m[32m#endif // OS_BUID[m
 /**[m
   Retrieve Namespaces information from provided LSA structure.[m
 [m
[36m@@ -2245,7 +2247,7 @@[m [mRetrieveNamespacesFromLsa([m
         NVDIMM_DBG("Unexpected TypeGuid for AppDirect NS");[m
         continue;[m
       }[m
[31m-[m
[32m+[m[32m#ifndef OS_BUILD[m
       // Iterate over DIMMs to check for partial update[m
       LIST_FOR_EACH(pNode, &gNvmDimmData->PMEMDev.Dimms) {[m
         pDimm = DIMM_FROM_NODE(pNode);[m
[36m@@ -2276,7 +2278,7 @@[m [mRetrieveNamespacesFromLsa([m
         }[m
         FREE_POOL_SAFE(pNamespaceLabel2);[m
       }[m
[31m-[m
[32m+[m[32m#endif // OS_BUILD[m
       // Iterate over DIMMs to collect labels to assemble AppDirect NS[m
       LIST_FOR_EACH(pNode, &gNvmDimmData->PMEMDev.Dimms) {[m
         pDimm = DIMM_FROM_NODE(pNode);[m
